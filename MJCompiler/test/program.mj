program mj 

bool k, l;
int a,  b[], c, d, k1;
const char p = 'a';
int pp[];
char kk[];

{

int m1(int a, int b, int c, bool d[], int l = 5) int k1, k2[];{
		//k1 = -m5(k);
		//k2 = 5;
		//k2 = -'a';
		koto: c++;
		goto koto;
		k2[0] = 5;
		//break;
		read(a);
		//continue;
		print(k2[5]);
		a = k2[0] + k2[1]; 
		//m2(k1);
		//return 8*5+k*5;
		pp = new int[a];
		pp[0] = k1;
		c = 7;
		do{
			a++;
		} while(a<5 && k || k2 != pp);
		//continue;
		len(k2);
		//break;
		return 3;
	}
	
bool m2(int a, int b, int c, bool d[], int k8 = 9, bool lo = false) int k1, k2[];{
		//goto koto;
		k1 = 0;
		//k++;
		c++;
		k8--;
		//lo--;
		k2[0] = 5;
		m1(k1, k1, k1, d, k2[0]);
		//m2(k1);
		//return 8*5+k*5;
		return k;
	}
	
//int m1() int k, k2;{
//		k = 0;
//		return k3;
//	}

void main() {

	b = new int[5];
	l=false;
	if (l == false)
		print(l);
	else
		print(a);
	//a = b + c - d + k;
	a = c - d;
	//int p1;
	return;
	
}

}

